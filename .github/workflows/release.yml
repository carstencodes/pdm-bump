---
name: Create release

on:
  push:
    tags:
      - 'v*'

jobs:
  changelog:
    name: Generate changelog
    runs-on: ubuntu-latest
    outputs:
      changelog: ${{ steps.changelog.outputs.changelog }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v5
        with:
          fetch-depth: 0 # Fetch entire history
      - name: Set up git-cliff
        uses: kenji-miyake/setup-git-cliff@v2
      - name: Generate changelog
        shell: bash
        run: |
          git cliff --verbose --config ${{ github.workspace }}/.gitcliff.toml --latest --strip all --output ${{ github.workspace }}/CHANGELOG.md
      - name: Export changelog
        uses: actions/upload-artifact@v4
        with:
          name: changelog
          path: ${{ github.workspace }}/CHANGELOG.md

  deploy:
    name: Deploy wheel to pypi
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5
    - name: Get newest python version
      id: setpyversion
      shell: bash
      run: |
        export PY_VERSION=$(cat .python-version | sort -V | tail -1)
        IFS=. read -r major minor patch <<< ${PY_VERSION}
        echo "python_version=${major}.${minor}" >> "${GITHUB_OUTPUT}"
    - name: Set PDM version
      id: setpdmversion
      run: |
        echo "pdm_version=$(./.github/workflow_scripts/get-pdm-version-from-lock.awk pdm.lock)" >> $GITHUB_OUTPUT
    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: ${{ steps.setpyversion.outputs.python_version }}
    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install pdm==${{ steps.setpdmversion.outputs.pdm_version }}
        pdm install -G:all
      env:
        PDM_PYTHON_VERSION: ${{ steps.setpyversion.outputs.python_version }}
    - name: Build and publish
      env:
        PDM_PUBLISH_USERNAME: ${{ secrets.PYPI_USERNAME }}
        PDM_PUBLISH_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        PDM_PYTHON_VERSION: ${{ steps.setpyversion.outputs.python_version }}
      run: |
        pdm publish

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [ changelog, deploy ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Get changelog
        uses: actions/download-artifact@v5
        with:
          name: changelog
          path: ${{ github.workspace }}
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          body_path: ${{ github.workspace }}/CHANGELOG.md
          prerelease: ${{ (startsWith(steps.tag_name.outputs.version, 'v0')) || (endsWith(steps.tag_name.outputs.version, '-pre')) || (endsWith(steps.tag_name.outputs.version, '-dev')) }}
          draft: false
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
